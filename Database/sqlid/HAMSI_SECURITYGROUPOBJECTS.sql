set define off
declare
v_folder_id varchar2(40) :='HAMSI_0A78A149DC3B5F87E053D20F0A0A4855';
v_sql_id varchar2(85) :='HAMSI_SECURITYGROUPOBJECTS';
v_sql_id_displ varchar2(85) :='HAMSI_SecurityGroupObjects';
v_read_only number :='';
v_datasource varchar2(32) :='';
v_stype varchar2(32) :='SFPL';
v_site varchar2(10) :='HAMSI';
v_description varchar2(200) :='Objects with Security Group';
v_sql_text varchar2(4000) :='SELECT OBJECT_TYPE, OBJECT_TAG, OBJECT_DESC, SECURITY_GROUP AS SECURITY_GROUPS, NULL AS SECURITY_GROUP
FROM (SELECT B.OBJECT_TYPE, B.OBJECT_TAG, B.OBJECT_DESC, B.SECURITY_GROUP, D.PLAN_ID,D.PLAN_VERSION,D.PLAN_REVISION,D.PLAN_ALTERATIONS
FROM SFFND_HTREF_OPER_TEXT A,
SFCORE_MM_OBJECT B,
SFCORE_MM_HTREF C,
SFPL_STEP_V D
WHERE A.OBJECT_ID = C.OBJECT_ID
AND B.OBJECT_ID = C.EMBEDDED_OBJECT_ID
AND B.ACQUIRE_EXPRESS = ''N''
AND A.PLAN_ID = D.PLAN_ID
AND A.OPER_KEY = D.OPER_KEY
AND A.OPER_UPDT_NO = D.OPER_UPDT_NO
AND B.SECURITY_GROUP IS NOT NULL
UNION ALL
SELECT ''PART'' AS OBJECT_TYPE,
A.PART_NO AS OBJECT_TAG,
A.PART_TITLE AS OBJECT_DESC,
A.SECURITY_GROUP,B.PLAN_ID,B.PLAN_VERSION,B.PLAN_REVISION,B.PLAN_ALTERATIONS
FROM SFPL_STEP_ITEMS A, SFPL_STEP_V B
 WHERE A.SECURITY_GROUP IS NOT NULL
AND A.PLAN_ID = B.PLAN_ID
AND A.OPER_KEY = B.OPER_KEY
AND A.STEP_KEY = B.STEP_KEY
AND A.STEP_UPDT_NO = B.STEP_UPDT_NO
UNION ALL
SELECT ''TOOL'' AS OBJECT_TYPE,
A.TOOL_NO AS OBJECT_TAG,
A.TOOL_TITLE AS OBJECT_DESC,
A.SECURITY_GROUP, B.PLAN_ID,B.PLAN_VERSION,B.PLAN_REVISION,B.PLAN_ALTERATIONS
FROM SFPL_STEP_TOOL A, SFPL_STEP_V B
 WHERE A.SECURITY_GROUP IS NOT NULL
AND A.PLAN_ID = B.PLAN_ID
AND A.OPER_KEY = B.OPER_KEY
AND A.STEP_KEY = B.STEP_KEY
AND A.STEP_UPDT_NO = B.STEP_UPDT_NO
UNION ALL
SELECT B.OBJECT_TYPE, B.OBJECT_TAG, B.OBJECT_DESC, B.SECURITY_GROUP, D.PLAN_ID,D.PLAN_VERSION,D.PLAN_REVISION,D.PLAN_ALTERATIONS
FROM SFFND_HTREF_OPER_TEXT A, SFCORE_MM_OBJECT B, SFPL_STEP_V D
 WHERE A.OBJECT_ID = B.OBJECT_ID
AND B.ACQUIRE_EXPRESS = ''N''
AND A.PLAN_ID = D.PLAN_ID
AND A.OPER_KEY = D.OPER_KEY
AND A.OPER_UPDT_NO = D.OPER_UPDT_NO
AND B.SECURITY_GROUP IS NOT NULL
 UNION ALL
 SELECT B.OBJECT_TYPE, B.OBJECT_TAG, B.OBJECT_DESC, B.SECURITY_GROUP,  D.PLAN_ID,D.PLAN_VERSION,D.PLAN_REVISION,D.PLAN_ALTERATIONS
FROM SFPL_OPERATION_DESC A, SFCORE_MM_OBJECT B, SFPL_STEP_V D
  WHERE A.STDOPER_OBJECT_ID = B.OBJECT_ID
 AND B.ACQUIRE_EXPRESS = ''N''
 AND A.PLAN_ID = D.PLAN_ID
 AND A.OPER_KEY = D.OPER_KEY
 AND A.OPER_UPDT_NO = D.OPER_UPDT_NO
 AND B.SECURITY_GROUP IS NOT NULL
 UNION ALL
 SELECT B.OBJECT_TYPE, B.OBJECT_TAG, B.OBJECT_DESC, B.SECURITY_GROUP, D.PLAN_ID,D.PLAN_VERSION,D.PLAN_REVISION,D.PLAN_ALTERATIONS
FROM SFFND_HTREF_STEP_TEXT A,
SFCORE_MM_OBJECT B,
SFCORE_MM_HTREF C,
SFPL_STEP_V D
WHERE A.OBJECT_ID = C.OBJECT_ID
AND B.OBJECT_ID = C.EMBEDDED_OBJECT_ID
AND B.ACQUIRE_EXPRESS = ''N''
AND A.PLAN_ID = D.PLAN_ID
AND A.OPER_KEY = D.OPER_KEY
AND A.STEP_KEY = D.STEP_KEY
AND A.STEP_UPDT_NO = D.STEP_UPDT_NO
AND B.SECURITY_GROUP IS NOT NULL
UNION ALL
SELECT B.OBJECT_TYPE, B.OBJECT_TAG, B.OBJECT_DESC, B.SECURITY_GROUP, D.PLAN_ID,D.PLAN_VERSION,D.PLAN_REVISION,D.PLAN_ALTERATIONS
FROM SFFND_HTREF_PLAN_TEXT A,
SFCORE_MM_OBJECT B,
SFCORE_MM_HTREF C,
SFPL_PLAN_V D
  WHERE A.OBJECT_ID = C.OBJECT_ID
AND B.OBJECT_ID = C.EMBEDDED_OBJECT_ID
AND B.ACQUIRE_EXPRESS = ''N''
AND A.PLAN_ID = D.PLAN_ID
AND A.PLAN_UPDT_NO = D.PLAN_UPDT_NO
AND B.SECURITY_GROUP IS NOT NULL
UNION ALL
SELECT B.OBJECT_TYPE, B.OBJECT_TAG, B.OBJECT_DESC, B.SECURITY_GROUP,  D.PLAN_ID,D.PLAN_VERSION,D.PLAN_REVISION,D.PLAN_ALTERATIONS
FROM SFFND_HTREF_STEP_TEXT A, SFCORE_MM_OBJECT B, SFPL_STEP_V D
WHERE A.OBJECT_ID = B.OBJECT_ID
AND B.ACQUIRE_EXPRESS = ''N''
AND A.PLAN_ID = D.PLAN_ID
AND A.STEP_KEY = D.STEP_KEY
AND A.STEP_UPDT_NO = D.STEP_UPDT_NO
AND B.SECURITY_GROUP IS NOT NULL
UNION ALL
SELECT B.OBJECT_TYPE, B.OBJECT_TAG, B.OBJECT_DESC, B.SECURITY_GROUP, D.PLAN_ID,D.PLAN_VERSION,D.PLAN_REVISION,D.PLAN_ALTERATIONS
FROM SFFND_HTREF_PLAN_TEXT A,
SFCORE_MM_OBJECT B,
 SFPL_PLAN_V D
WHERE A.OBJECT_ID = B.OBJECT_ID
AND B.ACQUIRE_EXPRESS = ''N''
AND A.PLAN_ID = D.PLAN_ID
AND A.PLAN_UPDT_NO = D.PLAN_UPDT_NO
AND B.SECURITY_GROUP IS NOT NULL) X
WHERE X.PLAN_ID=:PLAN_ID
AND X.PLAN_VERSION=:PLAN_VERSION
AND X.PLAN_REVISION=:PLAN_REVISION
AND X.PLAN_ALTERATIONS=:PLAN_ALTERATIONS /*+ @Filter */
ORDER BY X.OBJECT_TYPE';
begin
begin
insert into sfcore_sql_lib(sql_id,sql_id_displ,updt_userid,time_stamp,read_only,datasource,stype, description,sql_text)
    values(v_sql_id,v_sql_id_displ,user,sysdate,v_read_only,v_datasource,v_stype, v_description,replace(v_sql_text,chr(10),chr(13)||chr(10)));
commit;
exception when dup_val_on_index then
  update sfcore_sql_lib
  set sql_text=replace(v_sql_text,chr(10),chr(13)||chr(10)),updt_userid=user,time_stamp=sysdate,
read_only=v_read_only,datasource=v_datasource,stype=v_stype,  
description=v_description
  where sql_id=v_sql_id;
  commit;
end;
begin
if v_folder_id is not null then
insert into sfcore_sql_lib_folder(sql_id,folder_id,updt_userid,time_stamp)
values(v_sql_id,v_folder_id,user,sysdate);
commit;
end if;
exception when others then null;
end;
end;
/

set define on

