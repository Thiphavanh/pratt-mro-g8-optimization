--VIS_CONV_COMMON_PHRASES_TRG
CREATE OR REPLACE TRIGGER "VIS_CONV_COMMON_PHRASES_TRG"
  BEFORE INSERT ON "VIS_CONV_COMMON_PHRASES"
  FOR EACH ROW
BEGIN
  IF INSERTING THEN
    IF :NEW."ID" IS NULL THEN
      SELECT VIS_CONV_COMMON_PHRASES_SEQ.NEXTVAL INTO :NEW."ID" FROM DUAL;
    END IF;
  END IF;
END;
/

ALTER TRIGGER "VIS_CONV_COMMON_PHRASES_TRG" ENABLE;

--VIS_CONV_PLAN_PROGRESS_ID_TRG
CREATE OR REPLACE TRIGGER "VIS_CONV_PLAN_PROGRESS_ID_TRG"
  BEFORE INSERT ON "VIS_CONV_PLAN_PROGRESS"
  FOR EACH ROW
BEGIN
  IF INSERTING THEN
    IF :NEW."ID" IS NULL THEN
      SELECT VIS_CONV_PLAN_PROGRESS_SEQ.NEXTVAL INTO :NEW."ID" FROM DUAL;
    END IF;
  END IF;
END;
/

ALTER TRIGGER "VIS_CONV_PLAN_PROGRESS_ID_TRG" ENABLE;

--VIS_CONV_WORKCENTER_MAP_TRG
CREATE OR REPLACE TRIGGER "VIS_CONV_WORKCENTER_MAP_TRG"
  BEFORE INSERT ON "VIS_CONV_WORKCENTER_MAP"
  FOR EACH ROW
BEGIN
  IF INSERTING THEN
    IF :NEW."ID" IS NULL THEN
      SELECT VIS_CONV_WORKCENTER_MAP_ID.NEXTVAL INTO :NEW."ID" FROM DUAL;
    END IF;
  END IF;
END;
/

ALTER TRIGGER "VIS_CONV_WORKCENTER_MAP_TRG" ENABLE;

--VIS_STEP_SEQ_GEN
CREATE OR REPLACE TRIGGER "VIS_STEP_SEQ_GEN"
  BEFORE INSERT ON "VIS_STEP"
  FOR EACH ROW
BEGIN
  IF INSERTING THEN
    IF :NEW."STEP_KEY" IS NULL THEN
      SELECT VIS_STEP_SEQ.NEXTVAL INTO :NEW."STEP_KEY" FROM DUAL;
    END IF;
  END IF;
END;
/

ALTER TRIGGER "VIS_STEP_SEQ_GEN" ENABLE;
